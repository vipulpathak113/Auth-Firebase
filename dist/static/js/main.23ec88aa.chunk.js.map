{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authAction.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/project/ProjectSummary.js","components/project/ProjectList.js","components/dashboard/Dashboard.js","components/project/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/project/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","state","console","log","profile","firebase","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","initials","SignedOutLinks","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","project_ProjectSummary","Dashboard","_this$props","this","project_ProjectList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","target","_this","setState","Object","defineProperty","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","bind","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","projectSuccess","projectError","required","authorId","add","objectSpread","Date","App","layout_Navbar","exact","path","component","ProjectDetails","Createproject","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","middleware","applyMiddleware","thunk","withExtraArgument","enhancers","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","store","createStore","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.23ec88aa.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authAction'\r\n\r\n\r\nconst SignedInLinks = (props) => {\r\n    const { profile } = props;\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/create\">New Project</NavLink></li>\r\n            <li><a onClick={props.signOut}>Logout</a></li>\r\n            <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{profile.initials}</NavLink></li>\r\n        </ul>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return {\r\n        profile: state.firebase.profile\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase()\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' })\r\n        }).catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR', err })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase()\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase()\r\n        const firestore = getFirestore()\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                email: newUser.email,\r\n                password: newUser.password,\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' })\r\n        }).catch(err => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err })\r\n        })\r\n\r\n\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/signup\">Signup</NavLink></li>\r\n            <li><NavLink to=\"/signin\">Login</NavLink></li>\r\n        </ul>\r\n\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n    console.log(auth)\r\n    const links = auth.uid ? <SignedInLinks /> : <SignedOutLinks />\r\n\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\">YODA</Link>\r\n                {links}\r\n            </div>\r\n\r\n        </nav>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // console.log(state)\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react';\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n    const { notifications } = props\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">\r\n                        Notifications\r\n                    </span>\r\n                    <ul className=\"notifications\">\r\n                        {notifications && notifications.map(item => {\r\n                            return (\r\n                                <li key={item.id}>\r\n                                    <span className=\"pink-text\">{item.user} </span>\r\n                                    <span>{item.content}</span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React from 'react';\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>{project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst ProjectList = ({ projects }) => {\r\n\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {projects && projects.map((project) => {\r\n                return (\r\n\r\n                    <Link to={'/project/' + project.id}>\r\n                        <ProjectSummary project={project} key={project.id} />\r\n                    </Link>\r\n                )\r\n            })}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList","import React, { Component } from 'react';\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../project/ProjectList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n\r\n        const { projects, auth, notifications } = this.props\r\n\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects} />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications} />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([{\r\n        collection: 'projects', orderBy: ['createdAt', 'desc']\r\n    },\r\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\r\n    ])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\n\r\nfunction ProjectDetails(props) {\r\n    const { project, auth } = props;\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n    console.log(project)\r\n    if (project) {\r\n        return (\r\n\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0 \">\r\n                    <div className=\"card-content \">\r\n                        <span className=\"card-title\">{project.title}</span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                        <div className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Page is loading</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id\r\n    const projects = state.firestore.data.projects\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([{\r\n        collection: 'projects'\r\n    }])\r\n\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authAction'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        console.log(e.target.id)\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state)\r\n        this.props.signIn(this.state)\r\n    }\r\n\r\n    render() {\r\n        const { authError, auth } = this.props\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" value={this.state.email} onChange={this.handleChange.bind(this)} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" value={this.state.password} onChange={this.handleChange.bind(this)} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                    </div>\r\n                    <div className=\"red-text center\">\r\n                        {authError ? <p>{authError}</p> : null}\r\n                    </div>\r\n\r\n\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authAction'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n\r\n    }\r\n    handleChange = (e) => {\r\n        console.log(e.target.id)\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n\r\n    render() {\r\n        const { auth, authError } = this.props\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" value={this.state.email} onChange={this.handleChange.bind(this)} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" value={this.state.password} onChange={this.handleChange.bind(this)} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" value={this.state.firstName} onChange={this.handleChange.bind(this)} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" value={this.state.lastName} onChange={this.handleChange.bind(this)} />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">SignUp</button>\r\n                    </div>\r\n                    <div className=\"red-text center\">\r\n                        {authError ? <p>{authError}</p> : null}\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n\r\n    }\r\n    handleChange = (e) => {\r\n        console.log(e.target.id)\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.props)\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        const { auth, projectSuccess, projectError } = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" value={this.state.title} onChange={this.handleChange.bind(this)} required />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" value={this.state.password} onChange={this.handleChange.bind(this)} required />\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n\r\n                    <div className=\"red-text center\">\r\n                        {projectError ? <p>{projectError}</p> : null}\r\n                    </div>\r\n\r\n                    <div className=\"green-text center\">\r\n                        {projectSuccess ? <p>{projectSuccess}</p> : null}\r\n                    </div>\r\n\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return {\r\n        projectSuccess: state.project.projectSuccess,\r\n        projectError: state.project.projectError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapToDispatchProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapToDispatchProps)(CreateProject)","export const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n\r\n        firestore.collection('projects').add({\r\n\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_PROJECT', project: project })\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR', project: err })\r\n        })\r\n\r\n\r\n    }\r\n    // type: 'ADD_PROJECT',\r\n    // project: project\r\n\r\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/project/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport Createproject from './components/project/CreateProject'\n// import './App.css';\n\nclass App extends Component {\n\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={Createproject} />\n          </Switch>\n\n        </div>\n      </Router>\n    );\n\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\nconst initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n\r\n        case 'LOGIN_SUCCESS':\r\n            console.log(\"Login success\");\r\n            return {\r\n                ...state, authError: null\r\n            }\r\n\r\n\r\n        case 'LOGIN_ERROR':\r\n            console.log(\"Login failed\");\r\n            return {\r\n                ...state,\r\n                authError: 'Login Failed'\r\n            }\r\n\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log(\"Signout success\");\r\n            return state\r\n\r\n\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log(\"Signup success\");\r\n            return {\r\n                ...state, authError: null\r\n            }\r\n\r\n        case 'SIGNUP_ERROR':\r\n            console.log(\"Signup failed\");\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer","\r\n\r\nconst initState = {\r\n    projectSuccess: null,\r\n    projectError: null\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log(\"created successfully\", action.project)\r\n            return {\r\n                ...state,\r\n                projectSuccess: 'New Project Created successfully',\r\n                projectError: null\r\n\r\n            };\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log(\"created error\", action.err)\r\n            return {\r\n\r\n                projectError: 'Project not created',\r\n                projectSuccess: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBusQQVGbATvQF4-SndjlaAOEzX_r3ypEI\",\r\n    authDomain: \"yodaapp-631b3.firebaseapp.com\",\r\n    databaseURL: \"https://yodaapp-631b3.firebaseio.com\",\r\n    projectId: \"yodaapp-631b3\",\r\n    storageBucket: \"yodaapp-631b3.appspot.com\",\r\n    messagingSenderId: \"308801558769\",\r\n    appId: \"1:308801558769:web:09b7570ab07405c2\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// firebase.firestore.settings({ timestampsInSnapshots: true })\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { getFirebase, reactReduxFirebase } from 'react-redux-firebase'\nimport { getFirestore, reduxFirestore } from 'redux-firestore'\nimport fbConfig from './config/fbConfig'\n\nconst middleware = applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore }));\nconst enhancers = compose(middleware, reduxFirestore(fbConfig), reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true }));\nconst store = createStore(\n    rootReducer, enhancers\n)\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    serviceWorker.unregister();\n})\n\n\n"],"sourceRoot":""}